module traffic_light(
    input clk,
    input reset,
    output reg [1:0] light
);
    reg [3:0] state;

    always @(posedge clk or posedge reset) begin
        if (reset)
            state <= 0;
        else begin
            case (state)
                0: state <= 1;
                1: state <= 2;
                2: state <= 3;
                3: state <= 0;
                default: state <= 0;
            endcase
        end
    end

    always @(*) begin
        case (state)
            0: light = 2'b01; // Red
            1: light = 2'b11; // Yellow
            2: light = 2'b10; // Green
            3: light = 2'b00; // Off
            default: light = 2'b00;
        endcase
    end
endmodule


module tb_traffic_light;
    reg clk, reset;
    wire [1:0] light;

    traffic_light uut (
        .clk(clk),
        .reset(reset),
        .light(light)
    );

    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

    initial begin
        reset = 1;
        #10;
        reset = 0;

        #100;
        $finish;
    end

    initial begin
        $dumpfile("traffic_light.vcd");
        $dumpvars(0, tb_traffic_light);
    end
endmodule
